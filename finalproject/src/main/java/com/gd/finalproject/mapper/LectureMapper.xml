<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.finalproject.mapper.LectureMapper">
    <!-- 강좌 리스트(lectureList) -->
    <select id="selectLectureList" resultType="map"> <!-- map : java.util.Map 약식표현, list, string ,int(java.lang.Integer),... -->
		SELECT
			l.lecture_no lectureNo,
			l.instructor_id instructorId,
			l.location_no locationNo,
			l.lecture_name lectureName,
			l.lecture_limited lectureLimited,
			l.lecture_time lectureTime,
			l.lecture_price lecturePrice,
			l.lecture_startDate lectureStartDate,
			l.lecture_endDate lectureEndDate,
			m.member_name memberName,
			GROUP_CONCAT(d.lecture_day 
			ORDER BY CASE d.lecture_day
		    WHEN '월' THEN 1
		    WHEN '화' THEN 2
		    WHEN '수' THEN 3
		    WHEN '목' THEN 4
		    WHEN '금' THEN 5
		    END ASC
				) lectureDay
		FROM lecture l JOIN member m ON m.member_id = l.instructor_id
        LEFT JOIN lectureday d ON l.lecture_no = d.lecture_no
        GROUP BY l.lecture_no
        LIMIT #{beginRow},#{rowPerPage} 
    </select>


    <!-- 강좌 리스트(lectureList) 페이징-Total -->
    <select id="getLectureTotal" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM lecture
    </select>

    <!-- 강좌 상세페이지(lectureListOne), 강좌 수정(updateLecture) - Form -->
    <select id="selectLectureOne" resultType="map"> <!-- map : java.util.Map 약식표현, list, string ,int(java.lang.Integer),... -->
        SELECT
	        l.lecture_no lectureNo,
	        l.instructor_id instructorId,
	        l.location_no locationNo,
	        l.lecture_name lectureName,
	        l.lecture_limited lectureLimited,
	        l.lecture_time lectureTime,
	        l.lecture_price lecturePrice,
	        l.lecture_startDate lectureStartDate,
	        l.lecture_endDate lectureEndDate,
	        m.member_name memberName,
	        m.member_gender memberGender,
	        GROUP_CONCAT(d.lecture_day
	        ORDER BY CASE d.lecture_day
	        WHEN '월' THEN 1
	        WHEN '화' THEN 2
	        WHEN '수' THEN 3
	        WHEN '목' THEN 4
	        WHEN '금' THEN 5
	        END ASC ) lectureDay
       	FROM lecture l JOIN member m
        ON m.member_id = l.instructor_id
        LEFT JOIN lectureday d
        ON l.lecture_no = d.lecture_no
        WHERE l.lecture_no = #{lectureNo}
        GROUP BY l.lecture_no
    </select>
	
	<!-- 강좌 추가(addLecture) -->
	<insert id="insertLecture" parameterType="com.gd.finalproject.vo.Lecture">
		INSERT INTO lecture (
			lecture_no, instructor_id, location_no, lecture_name, lecture_limited, lecture_time, 
			lecture_price, lecture_startDate, lecture_endDate
		) VALUES (#{lectureNo}, #{instructorId}, #{locationNo}, #{lectureName}, #{lectureLimited}, 
			#{lectureTime}, #{lecturePrice},  #{lectureStartDate}, #{lectureEndDate})
	</insert>
	
	<!-- 강좌요일 추가(addLectureDay) -->
	<insert id="insertLectureDay" parameterType="com.gd.finalproject.vo.LectureDay" >
		INSERT INTO lectureday( lecture_no, lecture_day ) VALUES (#{lectureNo}, #{lectureDay})
	</insert>

	<!-- 강사(addLecture-instructor) -->
	<select id="selectInstructor" resultType="com.gd.finalproject.vo.MemberDto">
		SELECT 
			i.member_id memberId, 
			m.member_name memberName 
		FROM instructor i JOIN member m 
		ON i.member_id = m.member_id
	</select>
	
	<!-- 장소(addLecture-location) -->
	<select id="selectLocation" resultType="com.gd.finalproject.vo.Location">
		SELECT location_no locationNo, lecture_addr lectureAddr FROM location
	</select>
	
	<!-- 강좌 수정(updateLecture) - Action -->
	<update id="updateLecture" parameterType="com.gd.finalproject.vo.Lecture">
		
	</update>
	
	<!-- 강좌 요일 삭제(deleteDayLecture) -->
	<delete id="deleteLectureDay" parameterType="string">
		DELETE FROM lectureday WHERE lecture_no=#{lectureNo}
	</delete>
	
	<!-- 강좌 삭제(deleteLecture) -->
	<delete id="deleteLecture" parameterType="string">
		DELETE FROM lecture WHERE lecture_no=#{lectureNo}
	</delete>

</mapper>